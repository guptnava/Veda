CREATE OR REPLACE PACKAGE PKG_EOD_RISK_LOAD AS
    PROCEDURE LOAD_DIMENSIONS(p_cob_date DATE);
    PROCEDURE LOAD_FACT_EOD_RISK(p_cob_date DATE);
END PKG_EOD_RISK_LOAD;
/

CREATE OR REPLACE PACKAGE BODY PKG_EOD_RISK_LOAD AS

    PROCEDURE LOAD_DIMENSIONS(p_cob_date DATE) IS
    BEGIN
        -- DIM_TRADE
        MERGE INTO DIM_TRADE d
        USING (
            SELECT DISTINCT TRADE_ID, DEAL_ID, CONTRACT_NAME, TRADE_MATURITY_DATE
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND TRADE_ID IS NOT NULL
        ) s ON (d.TRADE_ID = s.TRADE_ID)
        WHEN NOT MATCHED THEN
            INSERT (TRADE_ID, DEAL_ID, CONTRACT_NAME, TRADE_MATURITY_DATE)
            VALUES (s.TRADE_ID, s.DEAL_ID, s.CONTRACT_NAME, s.TRADE_MATURITY_DATE);

        -- DIM_INSTRUMENT
        MERGE INTO DIM_INSTRUMENT d
        USING (
            SELECT DISTINCT INSTRUMENT_ID, PRDS_PRODUCT_CODE, GPC_PRODUCT_CODE, SECURITYNAME
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND INSTRUMENT_ID IS NOT NULL
        ) s ON (d.INSTRUMENT_ID = s.INSTRUMENT_ID)
        WHEN NOT MATCHED THEN
            INSERT (INSTRUMENT_ID, PRDS_PRODUCT_CODE, GPC_PRODUCT_CODE, SECURITYNAME)
            VALUES (s.INSTRUMENT_ID, s.PRDS_PRODUCT_CODE, s.GPC_PRODUCT_CODE, s.SECURITYNAME);

        -- DIM_ISSUER
        MERGE INTO DIM_ISSUER d
        USING (
            SELECT DISTINCT ISSUER_ID, ISSUER_NAME, ISSUER_CODE
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND ISSUER_ID IS NOT NULL
        ) s ON (d.ISSUER_ID = s.ISSUER_ID)
        WHEN NOT MATCHED THEN
            INSERT (ISSUER_ID, ISSUER_NAME, ISSUER_CODE)
            VALUES (s.ISSUER_ID, s.ISSUER_NAME, s.ISSUER_CODE);

        -- DIM_RISK_FACTOR
        MERGE INTO DIM_RISK_FACTOR d
        USING (
            SELECT DISTINCT RISK_FACTOR_CODE, RISK_FACTOR_NAME, RISK_FACTOR_RATING,
                            RISK_FACTOR_CURRENCY_CODE, RISK_FACTOR_COUNTRY_CODE
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND RISK_FACTOR_CODE IS NOT NULL
        ) s ON (d.RISK_FACTOR_CODE = s.RISK_FACTOR_CODE)
        WHEN NOT MATCHED THEN
            INSERT (RISK_FACTOR_CODE, RISK_FACTOR_NAME, RISK_FACTOR_RATING,
                    RISK_FACTOR_CURRENCY_CODE, RISK_FACTOR_COUNTRY_CODE)
            VALUES (s.RISK_FACTOR_CODE, s.RISK_FACTOR_NAME, s.RISK_FACTOR_RATING,
                    s.RISK_FACTOR_CURRENCY_CODE, s.RISK_FACTOR_COUNTRY_CODE);

        -- DIM_BOOK
        MERGE INTO DIM_BOOK d
        USING (
            SELECT DISTINCT RPL_BOOK_ID, RPL_BOOK_CODE, RPL_BOOK_NAME, RPL_BOOK_DESCRIPTION,
                            RPL_BOOK_TRAD_BANK, RPL_BOOK_PROP_FLOW, GPC_BOOK_CODE, GPC_BOOK_NAME,
                            GLOBAL_TRADER_BOOK_ID, RISK_BOOK, TRADE_BOOK
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND RPL_BOOK_ID IS NOT NULL
        ) s ON (d.RPL_BOOK_ID = s.RPL_BOOK_ID)
        WHEN NOT MATCHED THEN
            INSERT (RPL_BOOK_ID, RPL_BOOK_CODE, RPL_BOOK_NAME, RPL_BOOK_DESCRIPTION,
                    RPL_BOOK_TRAD_BANK, RPL_BOOK_PROP_FLOW, GPC_BOOK_CODE, GPC_BOOK_NAME,
                    GLOBAL_TRADER_BOOK_ID, RISK_BOOK, TRADE_BOOK)
            VALUES (s.RPL_BOOK_ID, s.RPL_BOOK_CODE, s.RPL_BOOK_NAME, s.RPL_BOOK_DESCRIPTION,
                    s.RPL_BOOK_TRAD_BANK, s.RPL_BOOK_PROP_FLOW, s.GPC_BOOK_CODE, s.GPC_BOOK_NAME,
                    s.GLOBAL_TRADER_BOOK_ID, s.RISK_BOOK, s.TRADE_BOOK);

        -- DIM_LOCATION
        MERGE INTO DIM_LOCATION d
        USING (
            SELECT DISTINCT RPL_LOCATION_ID, RPL_LOC_CODE, RPL_LOC_NAME, RPL_LOC_DESCRIPTION
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND RPL_LOCATION_ID IS NOT NULL
        ) s ON (d.RPL_LOCATION_ID = s.RPL_LOCATION_ID)
        WHEN NOT MATCHED THEN
            INSERT (RPL_LOCATION_ID, RPL_LOC_CODE, RPL_LOC_NAME, RPL_LOC_DESCRIPTION)
            VALUES (s.RPL_LOCATION_ID, s.RPL_LOC_CODE, s.RPL_LOC_NAME, s.RPL_LOC_DESCRIPTION);

        -- DIM_SUBSIDIARY
        MERGE INTO DIM_SUBSIDIARY d
        USING (
            SELECT DISTINCT RPL_SUBSIDIARY_ID, RPL_SUBS_CODE, RPL_SUBS_NAME, RPL_SUBS_DESCRIPTION
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND RPL_SUBSIDIARY_ID IS NOT NULL
        ) s ON (d.RPL_SUBSIDIARY_ID = s.RPL_SUBSIDIARY_ID)
        WHEN NOT MATCHED THEN
            INSERT (RPL_SUBSIDIARY_ID, RPL_SUBS_CODE, RPL_SUBS_NAME, RPL_SUBS_DESCRIPTION)
            VALUES (s.RPL_SUBSIDIARY_ID, s.RPL_SUBS_CODE, s.RPL_SUBS_NAME, s.RPL_SUBS_DESCRIPTION);

        -- DIM_UNIT
        MERGE INTO DIM_UNIT d
        USING (
            SELECT DISTINCT RPL_UNIT_ID, RPL_UNIT_NAME
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND RPL_UNIT_ID IS NOT NULL
        ) s ON (d.RPL_UNIT_ID = s.RPL_UNIT_ID)
        WHEN NOT MATCHED THEN
            INSERT (RPL_UNIT_ID, RPL_UNIT_NAME)
            VALUES (s.RPL_UNIT_ID, s.RPL_UNIT_NAME);

        -- DIM_PACKAGE
        MERGE INTO DIM_PACKAGE d
        USING (
            SELECT DISTINCT PKG_ID, PKG_NAME, PKG_TYPE
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date AND PKG_ID IS NOT NULL
        ) s ON (d.PKG_ID = s.PKG_ID)
        WHEN NOT MATCHED THEN
            INSERT (PKG_ID, PKG_NAME, PKG_TYPE)
            VALUES (s.PKG_ID, s.PKG_NAME, s.PKG_TYPE);

        -- DIM_TIME
        MERGE INTO DIM_TIME d
        USING (
            SELECT DISTINCT COB_DATE, FEED_COB_DATE, RPL_COB_DATE
            FROM MDS_CSA_VAL_SENSITIVITIES_V2 WHERE COB_DATE = p_cob_date
        ) s ON (d.COB_DATE = s.COB_DATE)
        WHEN NOT MATCHED THEN
            INSERT (COB_DATE, FEED_COB_DATE, RPL_COB_DATE)
            VALUES (s.COB_DATE, s.FEED_COB_DATE, s.RPL_COB_DATE);
    END;

    PROCEDURE LOAD_FACT_EOD_RISK(p_cob_date DATE) IS
    BEGIN
        INSERT INTO FACT_EOD_RISK (
            TRADE_ID, DEAL_ID, INSTRUMENT_ID, ISSUER_ID, RISK_FACTOR_CODE, RISK_TYPE_CODE,
            RPL_BOOK_ID, RPL_LOCATION_ID, RPL_SUBSIDIARY_ID, RPL_UNIT_ID,
            COB_DATE, FEED_COB_DATE, RPL_COB_DATE, PKG_ID, SOURCE_EXP_SEQ_ID, DSLOADID,
            RISK_AMOUNT, RISK_AMOUNT_EURO, RISK_AMOUNT_USD, QUANTITY, IMPLIED_VOLATILITY,
            MONEYNESS, STRIKE_PRICE, REPORTING_TENOR1, REPORTING_TENOR2,
            CATEGORY, FLASH_OFFICIAL, BUY_SELL_FLAG, CALL_PUT_IND, BPV_IND,
            RISK_CLASS, RISK_STRATEGY, COVERED_POSITIONS_US_IHC_IND, PERFOMING_ASSET_INDICATOR
        )
        SELECT
            TRADE_ID, DEAL_ID, INSTRUMENT_ID, ISSUER_ID, RISK_FACTOR_CODE, RISK_TYPE_CODE,
            RPL_BOOK_ID, RPL_LOCATION_ID, RPL_SUBSIDIARY_ID, RPL_UNIT_ID,
            COB_DATE, FEED_COB_DATE, RPL_COB_DATE, PKG_ID, SOURCE_EXP_SEQ_ID, DSLOADID,
            RISK_AMOUNT, RISK_AMOUNT_EURO, RISK_AMOUNT_USD, QUANTITY, IMPLIED_VOLATILITY,
            MONEYNESS, STRIKE_PRICE, REPORTING_TENOR1, REPORTING_TENOR2,
            CATEGORY, FLASH_OFFICIAL, BUY_SELL_FLAG, CALL_PUT_IND, BPV_IND,
            RISK_CLASS, RISK_STRATEGY, COVERED_POSITIONS_US_IHC_IND, PERFOMING_ASSET_INDICATOR
        FROM MDS_CSA_VAL_SENSITIVITIES_V2
        WHERE COB_DATE = p_cob_date;
    END;

END PKG_EOD_RISK_LOAD;
/
